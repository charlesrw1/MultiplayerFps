

layout(local_size_x = 64, local_size_y=1,local_size_z=1) in;

struct DrawElementsIndirectCommand
{
	uint count;
	uint primcount;
	uint firstindex;
	int basevertex;
	uint baseinstance;
};


struct Chunk {
    vec4 cone_apex;
    vec4 cone_axis_cutoff;
    vec4 bounding_sphere;
    uint triangle_offset;
    uint index_offset;
    uint triangle_count;
    uint index_count;
};

struct Chunk_Args
{
	uint chunk_idx;
	uint inst_idx;
};

layout(binding = 2, std140) buffer DrawElementsIndirectCommand_Buffer {
	DrawElementsIndirectCommand indirect_calls[];
};

layout(binding = 3, std140) readonly buffer Meshlet_BUffer {
	Chunk chunks[];
};

layout(binding = 7, std140) readonly buffer Index_Buffer {
	uint index_buffer[];
};

layout(binding = 4, std140) buffer {
	uint out_indicies[];
};

layout(binding = 5, std140) buffer {
	uint index_to_inst[];
};

layout(binding = 6, std140) buffer {
	uint num_chunk_args;
	Chunk_Args chunk_args[];
};

uniform uint num_instances = 0;

// first pass: expand chunks for instances

// second pass: append to out_indicies


void main()
{
	if(gl_GlobalInvocationID.x >= num_instances)
		return;
		
	

}