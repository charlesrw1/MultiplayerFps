
#include "SharedGpuTypes.txt"

#ifdef ALPHATEST
in vec2 FS_IN_Texcoord;
uniform sampler2D basecolor;
#endif


float dither_pattern[16] = {
	1.0 / 17.0,  9.0 / 17.0,  3.0 / 17.0, 11.0 / 17.0,
13.0 / 17.0,  5.0 / 17.0, 15.0 / 17.0,  7.0 / 17.0,
4.0 / 17.0, 12.0 / 17.0,  2.0 / 17.0, 10.0 / 17.0,
16.0 / 17.0,  8.0 / 17.0, 14.0 / 17.0,  6.0 / 17.0
};
flat in uint FS_IN_Objid;

layout (binding = 2, std140) readonly buffer Object_Data_Buffer {
	Object_Instance g_objects[];
};


void main()
{
#ifdef ALPHATEST
	vec4 tex = texture(basecolor, FS_IN_Texcoord);
	if(tex.a < 0.5)
		discard;
#endif

#ifdef DITHER
	vec4 obj_color = g_objects[FS_IN_Objid].colorval;
	
	uvec2 dither_coord = uvec2(uint(mod(gl_FragCoord.x, 4.0)), uint(mod(gl_FragCoord.y, 4.0)));
	float dither_alpha = dither_pattern[dither_coord.x+dither_coord.y*4];
	if(!(obj_color.a<=dither_alpha) != bool(g_objects[FS_IN_Objid].opposite_dither))
		discard;
#endif

}
	
