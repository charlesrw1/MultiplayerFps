
#include "SharedGpuTypes.txt"

//#extension GL_ARB_bindless_texture : require

in vec3 FS_IN_FragPos;
in vec3 FS_IN_Normal;
in vec2 FS_IN_Texcoord;
in vec3 FS_IN_ColorHash;
out vec4 FS_OUT_Color;


flat in uint FS_IN_DrawID;




layout (binding = 0, std140) uniform Ubo_View_Constant_Buffer {
	Ubo_View_Constants_Struct g;
};

layout (binding = 3, std140)  readonly buffer bindless_images {
	uvec4 imghandles[];
};

void main()
{
	vec3 v = normalize(FS_IN_FragPos -  g.viewpos_time.xyz);
	vec3 n = normalize(FS_IN_Normal);
	float ndotv = max(dot(n, -v), 0.4);

	uvec2 img_handle = uvec2(imghandles[FS_IN_DrawID].x,imghandles[FS_IN_DrawID].y);


	
	//vec4 color = texture(sampler2D(img_handle),FS_IN_Texcoord);

	//FS_OUT_Color = vec4(FS_IN_ColorHash.rgbb);
	FS_OUT_Color = vec4(FS_IN_ColorHash*ndotv,1);

	
}