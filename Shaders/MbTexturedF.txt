

out vec4 FS_OUT_Color;

in vec4 FS_IN_Color;
in vec2 FS_IN_TexCoord;

#ifdef TEXTUREARRAY
uniform sampler2DArray basecolor;
uniform int slice;
#else
uniform sampler2D basecolor;
#endif

float near = 0.01; 
float far  = 100.0; 
  
float LinearizeDepth(float depth) 
{
    float z = depth * 2.0 - 1.0; // back to NDC 
    return (2.0 * near * far) / (far + near - z * (far - near));	
}


uniform vec4 tint;

void main()
{
#ifdef TEXTUREARRAY
	vec4 color = texture(basecolor, vec3(FS_IN_TexCoord, slice));
	FS_OUT_Color = vec4(color.r,0,0,1.0);
#else
	vec4 color = texture(basecolor,FS_IN_TexCoord);
	color.r = LinearizeDepth(color.r)/far;

#ifdef PARTICLE_SHADER
	//if(color.r < 0.2)
	//	discard;
	
	FS_OUT_Color = vec4(FS_IN_Color.rgb, FS_IN_Color.a*color.r);
#else
	FS_OUT_Color = color*FS_IN_Color;
#endif

#endif
}
	
